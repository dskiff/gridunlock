@import "~normalize.css";
@import "~@blueprintjs/core/lib/css/blueprint.css";
@import "~@blueprintjs/icons/lib/css/blueprint-icons.css";
@import "~@blueprintjs/popover2/lib/css/blueprint-popover2.css";
@import "~@fontsource/libre-franklin/variable.css";

@import "~@blueprintjs/core/lib/scss/variables.scss";

:root {
  --minimum-cell-size: 20px;
  --minimum-clue-list-size: 120px;

  --puzzle-column-count: 3;
  --puzzle-cell-spacing: 1px;
  --puzzle-cell-size: max(calc(min(70vh, 70vw) / var(--puzzle-column-count)), var(--minimum-cell-size));
  --puzzle-cell-selection-border-width: 2px;
  --puzzle-cell-inner-size: calc(var(--puzzle-cell-size) - 2 * var(--puzzle-cell-selection-border-width));
  --puzzle-cell-content-font-size: calc(var(--puzzle-cell-inner-size) * 0.66);
  --puzzle-cell-clue-font-size: calc(var(--puzzle-cell-inner-size) - var(--puzzle-cell-content-font-size));

  --virtual-keyboard-button-horiz-margin: 1vw;
  --virtual-keyboard-button-vert-margin: 2vw;
  --virtual-keyboard-button-width: calc((100vw - 11 * var(--virtual-keyboard-button-horiz-margin)) / 10);
  --virtual-keyboard-button-height: calc(var(--virtual-keyboard-button-width) * 1.4);
}

$main-background-color: #293742;
$cell-dimension: 32px;
$cell-background: #182026;
$selected-clue-background: #404854;
$selected-clue-border: #e1e8ed;
$selected-clue-border-width: 1px;

body {
  font-family: "Libre FranklinVariable";
  font-variation-settings: "wght" 400;
}

.root {
  position: relative;

  background-color: $main-background-color;
  width: 100vw;
  height: 100vh;
  padding: 20px;

  overflow: hidden;

  .loading-overlay {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0;
    z-index: 9999;
    transition: 200ms ease-in opacity;

    display: flex;
    align-items: center;
    justify-content: center;

    background-color: $main-background-color;
    pointer-events: none;

    &.loading {
      opacity: 1;
    }
  }
}

.header {
  grid-area: header;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-self: left;
  margin: 0 0 10px 0;
  flex: 0 0;

  h1 {
    margin: 0;
  }

  .buttons {
    margin-left: 10px;
    width: 150px;
  }

  .app-icon {
    margin-left: 8px;
    height: 28px;
    width: 28px;
  }
}

.puzzle-view {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 0fr 1fr;
  grid-template-areas:
    "main header"
    "main clues";
  justify-items: center;
  width: 100vw;
  height: 100vh;
  overflow: hidden;

  &.-puzzle-won {
    .puzzle-cell.unblocked {
      background: darken(#0a6640, 5%);
    }
  }
}

.puzzle-clues-desktop {
  grid-area: clues;
  display: flex;
  flex-direction: column;
  justify-content: center;
  justify-self: left;

  .puzzle-clue-list-title {
    margin: 12px 0px;
  }

  .puzzle-clue-list {
    margin: 0px;
    padding-left: 12px;
  }

  .puzzle-clues-across {
    overflow-y: auto;
    max-height: max(30vh, var(--minimum-clue-list-size));
  }

  .puzzle-clues-down {
    overflow-y: auto;
    max-height: max(30vh, var(--minimum-clue-list-size));
  }

  .selected-puzzle-clue {
    background-color: $selected-clue-background;
    font-variation-settings: "wght" 600;
    box-shadow: inset 0 0 0 $selected-clue-border-width $selected-clue-border;
  }

  .puzzle-clue {
    list-style: none;
    margin: 2px 0px;
    padding: 2px;
  }
}

.puzzle-container {
  grid-area: main;

  .puzzle-title {
    margin: 2px 0px;
  }

  .puzzle-author {
    margin: 2px 0px;
  }

  .grid-container {
    display: grid;
    grid-template-columns: repeat(var(--puzzle-column-count), var(--puzzle-cell-size));
    grid-template-rows: repeat(auto-fill, var(--puzzle-cell-size));
    column-gap: var(--puzzle-cell-spacing);
    row-gap: var(--puzzle-cell-spacing);

    &,
    * {
      user-select: none;
      -webkit-touch-callout: none;
    }
  }

  .puzzle-copyright {
    margin-top: 5px;
  }
}

.puzzle-cell {
  height: var(--puzzle-cell-size);
  width: var(--puzzle-cell-size);
  border: var(--puzzle-cell-selection-border-width) solid transparent;
  position: relative;

  .content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    height: var(--puzzle-cell-inner-size);
    width: var(--puzzle-cell-inner-size);

    border: none;
    padding: 0;
    padding-top: var(--puzzle-cell-clue-font-size);
    margin: 0;
    line-height: 1;

    text-align: center;
    font-size: var(--puzzle-cell-content-font-size);
    font-variation-settings: "wght" 600;
    caret-color: transparent;
    background: transparent;
    overflow: hidden;

    &:focus {
      outline: none;
    }
  }

  .clue-number {
    flex: 0 1;
    pointer-events: none;
    color: $light-gray1;
    background: transparent;
    font-size: var(--puzzle-cell-clue-font-size);
    font-variation-settings: "wght" 600;
    margin: 0;
    line-height: 1;
  }

  &.-unblocked {
    background-color: $cell-background;
  }

  &.-local-player-selected {
    .clue-number {
      font-variation-settings: "wght" 600;
    }
  }

  &.-in-selected-word {
    background-color: $selected-clue-background;
    box-shadow: 0 0 0 $selected-clue-border-width $selected-clue-border;

    &.-filling-across {
      &.-filling-word-start {
        clip-path: inset(
          #{-$selected-clue-border-width} 0 #{-$selected-clue-border-width} #{-$selected-clue-border-width}
        );
      }

      &.-filling-word-middle {
        clip-path: inset(#{-$selected-clue-border-width} 0 #{-$selected-clue-border-width} 0);
      }

      &.-filling-word-end {
        clip-path: inset(
          #{-$selected-clue-border-width} #{-$selected-clue-border-width} #{-$selected-clue-border-width} 0
        );
      }
    }

    &.-filling-down {
      &.-filling-word-start {
        clip-path: inset(
          #{-$selected-clue-border-width} #{-$selected-clue-border-width} 0 #{-$selected-clue-border-width}
        );
      }

      &.-filling-word-middle {
        clip-path: inset(0 #{-$selected-clue-border-width} 0 #{-$selected-clue-border-width});
      }

      &.-filling-word-end {
        clip-path: inset(
          0 #{-$selected-clue-border-width} #{-$selected-clue-border-width} #{-$selected-clue-border-width}
        );
      }
    }
  }

  &.-marked-incorrect {
    .content {
      color: $red3;
    }
  }
}

.mobile-footer {
  height: calc(3 * var(--virtual-keyboard-button-height) + 4 * var(--virtual-keyboard-button-vert-margin));
  grid-area: mobile-footer;
  display: none;

  .virtual-keyboard {
    width: 100vw;

    border: none;
    border-radius: 0;
    overflow: hidden;
    background: $main-background-color;
    user-select: none;
    touch-action: manipulation;

    .hg-rows {
      display: flex;
      flex-direction: column;
    }

    .hg-row {
      flex: 0 0 var(--virtual-keyboard-button-height);

      display: flex;
      justify-content: center;
      margin-top: var(--virtual-keyboard-button-vert-margin);

      &:last-child {
        margin-bottom: var(--virtual-keyboard-button-vert-margin);
      }
    }

    .hg-button {
      flex: 0 0 var(--virtual-keyboard-button-width);
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      border-radius: 10%;
      font-size: 16px;

      background: $gray1;
      margin-left: var(--virtual-keyboard-button-horiz-margin);

      &:last-child {
        margin-right: var(--virtual-keyboard-button-horiz-margin);
      }

      &.hg-activeButton {
        background: $gray5;
      }

      &.-backspace {
        font-size: 26px;
        font-weight: 400;
      }

      span {
        pointer-events: none;
        color: $white;
      }
    }
  }
}

@media only screen and (hover: none) {
  :root {
    --puzzle-cell-size: calc(100vw / var(--puzzle-column-count) - 2 * var(--puzzle-cell-spacing));
  }

  .root {
    padding: 0;
    height: stretch;
  }

  .puzzle-view {
    height: stretch;
  }

  // TODO: Add info panel
  .puzzle-title,
  .puzzle-copyright,
  .puzzle-author,
  .puzzle-clues-desktop,
  .app-title {
    display: none;
  }

  .mobile-footer {
    display: block;
  }

  .puzzle-container {
    overflow-y: auto;
    padding: 1px;
  }

  .puzzle-cell {
    .content {
      // On mobile, we use a virtual keyboard
      // Furthermore, the existing input interactions on iOS lead
      // to a selection callout appearing
      pointer-events: none;
    }
  }

  .puzzle-view {
    grid-template-columns: 100%;
    grid-template-rows: 0fr 1fr 0fr;
    grid-template-areas:
      "header"
      "main"
      "mobile-footer";
  }

  html,
  body {
    -webkit-overflow-scrolling: touch !important;
    overflow: hidden !important;
    height: 100% !important;
    height: stretch !important;
  }
}
